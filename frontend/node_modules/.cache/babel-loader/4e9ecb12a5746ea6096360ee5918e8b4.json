{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Treemzy\\\\Documents\\\\ReactApps\\\\ReactDjangoBlog\\\\project\\\\frontend\\\\src\\\\screens\\\\UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { register } from \"../actions/userActions\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserEditScreen() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const userId = id;\n  const history = useNavigate();\n  const location = useLocation();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\"); //by default the isAdmin should be false\n\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    error,\n    loading,\n    user\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate\n  } = userUpdate;\n  useEffect(() => {\n    if (!userInfo) {\n      history(\"/login\");\n    } else {\n      if (successUpdate) {\n        dispatch({\n          type: USER_UPDATE_RESET\n        });\n        history(\"/admin/userlist\");\n      } else {\n        if (!user.name || user._id !== Number(userId)) {\n          dispatch(getUserDetails(userId));\n        } else {\n          setName(user.name);\n          setEmail(user.email);\n          setIsAdmin(user.isAdmin);\n        }\n      }\n    }\n  }, [user, userId, successUpdate, history]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      _id: user._id,\n      name,\n      email,\n      isAdmin\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-light my-3\",\n      children: \"GO BACK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isAdmin\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Is Admin\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-login\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserEditScreen, \"vzmOrJpBbIlhffmtqlgdSHVNv7w=\", false, function () {\n  return [useParams, useNavigate, useLocation, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useLocation","useNavigate","Form","Button","Col","Row","useDispatch","useSelector","Loader","Message","FormContainer","register","getUserDetails","updateUser","USER_UPDATE_RESET","UserEditScreen","id","userId","history","location","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userLogin","state","userInfo","userDetails","error","loading","user","userUpdate","errorUpdate","loadingUpdate","success","successUpdate","type","_id","Number","submitHandler","e","preventDefault","target","value","checked"],"sources":["C:/Users/Treemzy/Documents/ReactApps/ReactDjangoBlog/project/frontend/src/screens/UserEditScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { register } from \"../actions/userActions\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nfunction UserEditScreen() {\r\n  const { id } = useParams();\r\n  const userId = id;\r\n  const history = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  //by default the isAdmin should be false\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history(\"/login\");\r\n    } else {\r\n      if (successUpdate) {\r\n        dispatch({ type: USER_UPDATE_RESET });\r\n        history(\"/admin/userlist\");\r\n      } else {\r\n        if (!user.name || user._id !== Number(userId)) {\r\n          dispatch(getUserDetails(userId));\r\n        } else {\r\n          setName(user.name);\r\n          setEmail(user.email);\r\n          setIsAdmin(user.isAdmin);\r\n        }\r\n      }\r\n    }\r\n  }, [user, userId, successUpdate, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: user._id, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        GO BACK\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"isAdmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n            <br />\r\n            <div className=\"btn-login\">\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Update\r\n                </Button>\r\n            </div>\r\n           \r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}