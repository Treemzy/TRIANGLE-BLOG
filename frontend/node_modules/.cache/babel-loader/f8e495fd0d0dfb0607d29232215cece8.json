{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Treemzy\\\\Documents\\\\ReactApps\\\\ReactDjangoBlog\\\\project\\\\frontend\\\\src\\\\screens\\\\HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ListGroup, Row, Col } from \"react-bootstrap\";\nimport Jumbotron from '../components/Jumbotron';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Posts from '../components/Posts';\nimport Trending from '../components/Trending';\nimport { Link } from 'react-router-dom';\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { listPosts } from '../actions/postActions';\nimport Reactions from '../components/Reactions';\nimport Paginate from \"../components/Paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HomeScreen() {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useNavigate();\n  const location = useLocation();\n  const postList = useSelector(state => state.postList);\n  const {\n    error,\n    loading,\n    posts\n  } = postList;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [pageNumberLimit, setPageNumberLimit] = useState(5);\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n\n  const handleClick = event => {\n    setCurrentPage(Number(event.target.id));\n  };\n\n  const handleNextBtn = () => {\n    setCurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(posts.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = posts.slice(indexOfFirstItem, indexOfLastItem);\n  const renderPageNumbers = pages.map(number => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `page-link ${currentPage === number ? \"active\" : null}`,\n        id: number,\n        onClick: handleClick,\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  });\n  useEffect(() => {\n    dispatch(listPosts());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All POSTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 14\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          \"aria-label\": \"Page navigation example\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            class: \"pagination\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              class: \"page-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                class: \"page-link\",\n                onClick: handleNextBtn,\n                \"aria-label\": \"Previous\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xAB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this), renderPageNumbers, /*#__PURE__*/_jsxDEV(\"li\", {\n              class: \"page-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                class: \"page-link\",\n                href: \"#\",\n                \"aria-label\": \"Next\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xBB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), currentItems.map(post => /*#__PURE__*/_jsxDEV(Posts, {\n          post: post\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 38\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(Trending, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomeScreen, \"aDG7Fi1Q9uNutmqDB7iRqyQHfDw=\", false, function () {\n  return [useDispatch, useNavigate, useLocation, useSelector];\n});\n\n_c = HomeScreen;\nexport default HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","ListGroup","Row","Col","Jumbotron","Loader","Message","Posts","Trending","Link","useNavigate","useLocation","listPosts","Reactions","Paginate","HomeScreen","dispatch","history","location","postList","state","error","loading","posts","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","pageNumberLimit","setPageNumberLimit","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","handleClick","event","Number","target","id","handleNextBtn","pages","i","Math","ceil","length","push","indexOfLastItem","indexOfFirstItem","currentItems","slice","renderPageNumbers","map","number","post","_id"],"sources":["C:/Users/Treemzy/Documents/ReactApps/ReactDjangoBlog/project/frontend/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ListGroup,Row, Col } from \"react-bootstrap\";\r\nimport Jumbotron from '../components/Jumbotron'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Posts from '../components/Posts'\r\nimport Trending from '../components/Trending'\r\nimport { Link } from 'react-router-dom'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { listPosts } from '../actions/postActions'\r\nimport Reactions from '../components/Reactions'\r\nimport Paginate from \"../components/Paginate\";\r\n\r\nfunction HomeScreen() {\r\n    \r\n    const dispatch = useDispatch();   \r\n    const history = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const postList = useSelector((state) => state.postList);\r\n    const { error, loading, posts} = postList;\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [itemsPerPage, setItemsPerPage] = useState(5);\r\n\r\n    const [pageNumberLimit, setPageNumberLimit] = useState(5);\r\n    const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\r\n    const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n\r\n\r\n    const handleClick= (event) =>{\r\n        setCurrentPage(Number(event.target.id));\r\n    }\r\n    const handleNextBtn = () => {\r\n        setCurrentPage(currentPage + 1);\r\n\r\n        if(currentPage + 1 > maxPageNumberLimit){\r\n            setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n            setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        }\r\n    }\r\n    const pages = [];\r\n\r\n    for(let i = 1; i<=Math.ceil(posts.length/itemsPerPage); i++){\r\n        pages.push(i);\r\n    }\r\n\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = posts.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    const renderPageNumbers = pages.map((number) => {\r\n        if(number < maxPageNumberLimit + 1 && number > minPageNumberLimit){\r\n            return(\r\n                <li \r\n                    className={`page-link ${currentPage === number ? \"active\" : null}`}\r\n                    key={number} \r\n                    id={number} \r\n                    onClick={handleClick}\r\n                >\r\n                  {number} \r\n                </li>\r\n            )\r\n        }else{\r\n            return null;\r\n        }\r\n        \r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(listPosts());\r\n      }, [ dispatch]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n             <Jumbotron/>\r\n             <h1>All POSTS</h1>\r\n             {loading ? (\r\n                    <Loader/>\r\n                ) : error ? (\r\n                    <Message variant=\"danger\">{error}</Message>\r\n                ) : (\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\"> \r\n                        <nav aria-label=\"Page navigation example\">\r\n                            <ul class=\"pagination\">\r\n                                <li class=\"page-item\">\r\n                                    <a class=\"page-link\" onClick={handleNextBtn} aria-label=\"Previous\">\r\n                                    <span aria-hidden=\"true\">&laquo;</span>\r\n                                    </a>\r\n                                </li>\r\n\r\n                                \r\n                                {renderPageNumbers} \r\n\r\n                                <li class=\"page-item\">\r\n                                    <a class=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </nav>\r\n                                                         \r\n                                {currentItems.map((post) => (                      \r\n                                     <Posts post={post} key={post._id} />                                                        \r\n                                ))}                                                                               \r\n                        </div>\r\n                       <div className=\"col-md-4\">\r\n                          <Trending/>\r\n                       </div>\r\n                       \r\n                    </div>\r\n                    \r\n                    )\r\n                }           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}