{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT } from \"../constants/userConstants\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login/\", {\n      username: email,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.detail\n    });\n    toast.success('Success Notification !', {\n      position: toast.POSITION.TOP_RIGHT\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","axios","toast","login","email","password","dispatch","type","config","headers","data","post","username","payload","localStorage","setItem","JSON","stringify","error","response","detail","success","position","POSITION","TOP_RIGHT","logout","removeItem"],"sources":["C:/Users/Treemzy/Documents/ReactApps/ReactDjangoBlog/project/frontend/src/actions/userActions.js"],"sourcesContent":["import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n  } from \"../constants/userConstants\";\r\n  import axios from \"axios\";\r\n  import { toast } from \"react-toastify\";\r\n\r\n\r\n  export const login = (email, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_LOGIN_REQUEST,\r\n      });\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/users/login/\",\r\n        { username: email, password: password },\r\n        config\r\n      );\r\n  \r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data,\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.detail,\r\n        \r\n      });\r\n      toast.success('Success Notification !', {\r\n        position: toast.POSITION.TOP_RIGHT\r\n    });\r\n    }\r\n  };\r\n\r\n  export const logout = () => (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    dispatch({ type: USER_LOGOUT });\r\n  };"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,WAJJ,QAKS,4BALT;AAME,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAGA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;EAC5D,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAEV;IADC,CAAD,CAAR;IAGA,MAAMW,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,gBAAgB;MADT;IADI,CAAf;IAKA,MAAM;MAAEC;IAAF,IAAW,MAAMT,KAAK,CAACU,IAAN,CACrB,mBADqB,EAErB;MAAEC,QAAQ,EAAER,KAAZ;MAAmBC,QAAQ,EAAEA;IAA7B,CAFqB,EAGrBG,MAHqB,CAAvB;IAMAF,QAAQ,CAAC;MACPC,IAAI,EAAET,kBADC;MAEPe,OAAO,EAAEH;IAFF,CAAD,CAAR;IAIAI,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAjC;EACD,CApBD,CAoBE,OAAOQ,KAAP,EAAc;IACdZ,QAAQ,CAAC;MACPC,IAAI,EAAER,eADC;MAEPc,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,MADxB,GAEIF,KAAK,CAACE;IALL,CAAD,CAAR;IAQAlB,KAAK,CAACmB,OAAN,CAAc,wBAAd,EAAwC;MACtCC,QAAQ,EAAEpB,KAAK,CAACqB,QAAN,CAAeC;IADa,CAAxC;EAGD;AACF,CAlCM;AAoCP,OAAO,MAAMC,MAAM,GAAG,MAAOnB,QAAD,IAAc;EACxCQ,YAAY,CAACY,UAAb,CAAwB,UAAxB;EACApB,QAAQ,CAAC;IAAEC,IAAI,EAAEP;EAAR,CAAD,CAAR;AACD,CAHM"},"metadata":{},"sourceType":"module"}